<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>walkingspeed = 1;
maxspeed = 5;


//Item id
items[0,0] = 0
//item stackability 1/0
items[0,1] = 0
//item  blockablility
items[0,2] = 1

items[1,0] = 1
//item stackability 1/0
items[1,1] = 0
//item  blockablility
items[1,2] = 1

items[2,0] = 2
//item stackability 1/0
items[2,1] = 0
//item  blockablility
items[2,2] = 1

items[3,0] = 3
//item stackability 1/0
items[3,1] = 1
//item  blockablility
items[3,2] = 1

/*
items[0,0] = 1
items[0,0] = 1
items[0,0] = 1
items[0,0] = 1
items[0,0] = 1
items[0,0] = 1
items[0,0] = 1
*/



inventory[0,0] = 0
inventory[1,0] = 0
inventory[2,0] = 0
inventory[3,0] = 0
inventory[4,0] = 0
inventory[5,0] = 0
inventory[6,0] = 0
inventory[7,0] = 0
inventory[8,0] = 0


//set amount to 0
inventory[0,1] = 0
inventory[1,1] = 0
inventory[2,1] = 0
inventory[3,1] = 0
inventory[4,1] = 0
inventory[5,1] = 0
inventory[6,1] = 0
inventory[7,1] = 0
inventory[8,1] = 0

inventory[0,0] = items[0,0]
inventory[0,1] = 1

inventory[1,0] = items[1,0]
inventory[1,1] = 1

inventory[2,0] = items[3,0]
inventory[2,1] = 3
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Movement Managr</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>friction = 0.5;


vspeed += 1



if keyboard_check(vk_anykey)
{
    if keyboard_check(vk_space) //jump
    {
    
        if not place_free(x,y+1)
        {vspeed=-10}
        //vspeed = vspeed - walkingspeed; 
        //sprite_index = spr_test_walk_right
        image_speed = 0.2;
        
    }
    if keyboard_check(ord('S')) //Ducken
    {
        vspeed = vspeed + walkingspeed; 
        //sprite_index = spr_test_walk_right;    
        image_speed = 0.2;
    }
    if keyboard_check(ord('A')) //Links
    {
        hspeed = hspeed - walkingspeed; 
        //sprite_index = spr_test_walk_right;    
        image_speed = 0.2;
    }
    if keyboard_check(ord('D')) //rechts
    {
    
        hspeed = hspeed + walkingspeed; 
        //sprite_index = spr_test_walk_right    
        image_speed = 0.2;
    }
}
else 
{
    //sprite_index = spr_test_idle;  
    image_speed = 0.03;
}





if place_free(x+hspeed,y) == false
{
    if hspeed &gt; 0
        move_contact_solid(0,-1)
    if hspeed &lt; 0
        move_contact_solid(180,-1)
hspeed = 0
}

if place_free(x,y+vspeed) == false{
    if vspeed &gt; 0
        move_contact_solid(270,-1)
    if vspeed &lt; 0
        move_contact_solid(90,-1)
vspeed = 0
}

if place_free(x+hspeed,y+vspeed) == false{
    hspeed = 0;
}

if (hspeed &gt; maxspeed)
{
    hspeed = maxspeed;
}
if (hspeed &lt; -maxspeed)
{
    hspeed = -maxspeed;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Inventory Manager</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_self();
for (i = 0; i &lt; 9; i++)
{
  if (inventory[i, 1] &gt;= 1)  
  {
    //draw_text(100, 100, inventory[i, 0]])
    draw_sprite(spr_inventory, inventory[i, 0], i*100, 200) 
    if (inventory[i, 1] &gt; 1)
    {
        draw_text(i*100, 200, inventory[i, 1])
    }
    
  
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
